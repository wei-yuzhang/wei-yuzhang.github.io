(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{248:function(a,t,e){"use strict";e.r(t);var r=e(0),i=Object(r.a)({},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"webpack基础配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack基础配置","aria-hidden":"true"}},[a._v("#")]),a._v(" Webpack基础配置")]),a._v(" "),e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介","aria-hidden":"true"}},[a._v("#")]),a._v(" 简介")]),a._v(" "),e("p",[a._v("打包模块化工具，一切文件皆模块，通过Loader转换文件，通过Plugin注入钩子，最后输出由多个模块组合而成的文件")]),a._v(" "),e("h2",{attrs:{id:"核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心概念","aria-hidden":"true"}},[a._v("#")]),a._v(" 核心概念")]),a._v(" "),e("ol",[e("li",[a._v("Entry：入口，webpack执行构建的第一步")]),a._v(" "),e("li",[a._v("Module：模块，在webpack中一切皆模块，一个模块对应一个文件。webapck会从配置的entry开始递归找出所有依赖的模块")]),a._v(" "),e("li",[a._v("Chunk：代码块，一个Chunk由多个模块组合而成，用于代码合并与分割")]),a._v(" "),e("li",[a._v("Loader：模块转换器，用于将模块的原内容按照需求转换成新内容")]),a._v(" "),e("li",[a._v("Plugin：扩展插件，在webpack构建流程中的特定时机注入扩展逻辑，来改变构建结果")]),a._v(" "),e("li",[a._v("Output：输出结果，在webpack经过一系列处理并得出最终想要的代码后输出结果")])])])},[],!1,null,null,null);t.default=i.exports}}]);