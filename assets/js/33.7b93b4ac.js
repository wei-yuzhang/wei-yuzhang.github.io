(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{234:function(i,v,e){"use strict";e.r(v);var t=e(0),_=Object(t.a)({},function(){var i=this,v=i.$createElement,e=i._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[e("h1",{attrs:{id:"git操作和使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git操作和使用","aria-hidden":"true"}},[i._v("#")]),i._v(" git操作和使用")]),i._v(" "),e("p",[i._v("Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。")]),i._v(" "),e("h2",{attrs:{id:"git简介与使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git简介与使用","aria-hidden":"true"}},[i._v("#")]),i._v(" Git简介与使用")]),i._v(" "),e("ul",[e("li",[i._v("工作区"),e("br"),i._v("\n电脑中可以看到的目录文件夹。")]),i._v(" "),e("li",[i._v("版本库"),e("br"),i._v("\n工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。")]),i._v(" "),e("li",[i._v("远程仓库"),e("br"),i._v("\nGithub上创建一个仓库，让这两个仓库进行远程同步。")])]),i._v(" "),e("h3",{attrs:{id:"提交过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交过程","aria-hidden":"true"}},[i._v("#")]),i._v(" 提交过程")]),i._v(" "),e("ul",[e("li",[i._v("使用git add把文件添加进去，实际上就是把文件修改添加到暂存区。\n"),e("br")]),i._v(" "),e("li",[i._v("使用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。\n"),e("br")]),i._v(" "),e("li",[i._v("把本地库的内容推送到远程，用git push命令，实际上是把当前分支推送到远程仓库。")])]),i._v(" "),e("h3",{attrs:{id:"创建和合并分支原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建和合并分支原理","aria-hidden":"true"}},[i._v("#")]),i._v(" 创建和合并分支原理")]),i._v(" "),e("ul",[e("li",[e("p",[i._v("一开始的时候，master分支是一条线，Git用master指向最新的提交，再用HEAD指向master，就能确定当前分支，以及当前分支的提交点：")]),i._v(" "),e("br"),i._v(" "),e("imageView",{attrs:{imageTitle:"目录结构",imageUrl:"/images/songjingyu/图片1.png"}}),i._v(" "),e("br")],1)]),i._v(" "),e("p",[i._v("每次提交，master分支都会向前移动一步，这样，随着你不断提交，master分支的线也越来越长。")]),i._v(" "),e("ul",[e("li",[e("p",[i._v("当创建新的分支，例如dev时，Git新建了一个指针叫dev，指向master相同的提交，再把HEAD指向dev，就表示当前分支在dev上：")]),i._v(" "),e("br"),i._v(" "),e("imageView",{attrs:{imageTitle:"目录结构",imageUrl:"/images/songjingyu/图片2.png"}}),i._v(" "),e("br")],1)]),i._v(" "),e("p",[i._v("Git创建一个分支很快，因为除了增加一个dev指针，改HEAD的指向，工作区的文件都没有任何变化。")]),i._v(" "),e("ul",[e("li",[e("p",[i._v("不过，从现在开始，对工作区的修改和提交就是针对dev分支了，比如新提交一次后，dev指针往前移动一步，而master指针不变：")]),i._v(" "),e("br"),i._v(" "),e("imageView",{attrs:{imageTitle:"目录结构",imageUrl:"/images/songjingyu/图片3.png"}}),i._v(" "),e("br")],1),i._v(" "),e("li",[e("p",[i._v("假如我们在dev上的工作完成了，就可以把dev合并到master上。最简单的方法，就是直接把master指向dev的当前提交，就完成了合并：")]),i._v(" "),e("br"),i._v(" "),e("imageView",{attrs:{imageTitle:"目录结构",imageUrl:"/images/songjingyu/图片4.png"}}),i._v(" "),e("br")],1)]),i._v(" "),e("p",[i._v("所以Git合并分支也很快。修改指针，工作区内容也不变。")]),i._v(" "),e("ul",[e("li",[e("p",[i._v("合并完分支后，甚至可以删除dev分支。删除dev分支就是把dev指针给删掉，删掉后，我们就剩下了一条master分支：")]),i._v(" "),e("br"),i._v(" "),e("imageView",{attrs:{imageTitle:"目录结构",imageUrl:"/images/songjingyu/图片5.png"}}),i._v(" "),e("br")],1)]),i._v(" "),e("h2",{attrs:{id:"主要操作命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主要操作命令","aria-hidden":"true"}},[i._v("#")]),i._v(" 主要操作命令")]),i._v(" "),e("ul",[e("li",[i._v("从远程库克隆项目："),e("code",[i._v("git clone 项目地址")])]),i._v(" "),e("li",[i._v("将工作区的内容放入版本库的暂存区："),e("code",[i._v("git add 内容")])]),i._v(" "),e("li",[i._v("将暂存区的内容提交到当前分支："),e("code",[i._v('git commit -m "git tracks changes"')])]),i._v(" "),e("li",[i._v("拉取分支："),e("code",[i._v("git pull")])]),i._v(" "),e("li",[i._v("推送分支："),e("code",[i._v("git push origin 对应的远程分支")])]),i._v(" "),e("li",[i._v("创建分支："),e("code",[i._v("git branch 分支名称")])]),i._v(" "),e("li",[i._v("切换分支："),e("code",[i._v("git checkout 切换到的分支")])]),i._v(" "),e("li",[i._v("创建分支，然后切换到分支："),e("code",[i._v("git checkout -b dev")])]),i._v(" "),e("li",[i._v("合并指定分支到当前分支："),e("code",[i._v("git merge dev")]),i._v("(合并dev分支到当前分支)")]),i._v(" "),e("li",[i._v("删除本地分支："),e("code",[i._v("git branch -d dev")])]),i._v(" "),e("li",[i._v("删除远程dev分支："),e("code",[i._v("git push origin :dev")])]),i._v(" "),e("li",[i._v("将当前版本回退到上一个版本: "),e("code",[i._v("git reset --hard HEAD^")])]),i._v(" "),e("li",[i._v("回退到上两个版本："),e("code",[i._v("git reset – hard HEAD^^")])]),i._v(" "),e("li",[i._v("回退到指定版本："),e("code",[i._v("git reset --hard commit_id")])]),i._v(" "),e("li",[i._v("删除一个文件："),e("code",[i._v("git rm test.txt")])])])])},[],!1,null,null,null);v.default=_.exports}}]);